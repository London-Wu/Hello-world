/*
  希尔排序(缩小增量排序)

  希尔排序的基本思想是将需要排序的序列划分成为若干个较小的子序列，对子序列进行插入排序，通过则插入排序能够使得原来序列成为基本有序。这样通过对较小的序列进行插入排序，然后对基本有序的数列进行插入排序，能够提高插入排序算法的效率

	选择一个增量序列t1，t2，…，tk，其中ti>tj，tk=1
	按增量序列个数k，对序列进行k 趟排序
	每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度

  	例如有十个元素的数组进行希尔排序，首先选择增量为10/2=5，此时第1个元素和第（1+5）个元素配对成子序列使用插入排序进行排序，第2和（2+5）个元素组成子序列，完成后增量继续减半为2，此时第1个元素、第（1+2）、第（1+4）、第（1+6）、第（1+8）个元素组成子序列进行插入排序
*/
#include <iostream>
using namespace std;

void Shell_sort(int arr[],int len)
{
	int inc;//增量
	int i,j,temp;
	for(inc = len / 2;inc >= 1;inc /= 2)//使增量不断缩小
	{
		//进行插入排序
		for(i = inc;i < len;i++)
		{
			temp = arr[i];
			for(j = i - inc;j >= 0 && arr[j] > temp;j -= inc)
			{
				arr[j + inc] = arr[j];
			}
			arr[j + inc] = temp;
		}
	}
}

int main()
{
	int arr[] = {109,10,43,103,60,164,80,134,100,19,69,142,42,151,160};
	int len = sizeof(arr) / sizeof(arr[0]);
	Shell_sort(arr,len);
	for(int i = 0;i < len;i++)
	{
		cout << arr[i] << " "; 
	}
	cout << endl;

	return 0;
}
